import java.awt.Insets;
import java.util.Stack;

public class biB
  implements cEa
{
  private Stack X = new Stack();
  private cDA Y;

  public bdj a(cDA paramcDA, cpa paramcpa)
  {
    this.Y = paramcDA;
    this.X.push(paramcpa);
    cpa localcpa = (cpa)this.X.peek();
    String str1 = "container";
    dRq localdRq1 = dRq.checkOut();
    localdRq1.setElementMap(localcpa);
    if ((localcpa != null) && (str1 != null))
      localcpa.a(str1, localdRq1);
    localdRq1.brn();
    cwP localcwP1 = new cwP();
    localcwP1.aJ();
    localcwP1.setElementMap(localcpa);
    localcwP1.setAlign(ajb.dhT);
    localcwP1.setSize(new Or(-2, -2));
    localcwP1.setYOffset(-200);
    localdRq1.bb(localcwP1);
    localcwP1.brn();
    localcwP1.rV();
    czO localczO1 = new czO();
    localczO1.aJ();
    localczO1.setAdaptToContentSize(true);
    localdRq1.bb(localczO1);
    localczO1.brn();
    localczO1.rV();
    String str2 = "backgroundContainer";
    dRq localdRq2 = dRq.checkOut();
    localdRq2.setElementMap(localcpa);
    if ((localcpa != null) && (str2 != null))
      localcpa.a(str2, localdRq2);
    localdRq2.setStyle("white");
    localdRq2.setPrefSize(new Or(350, 16));
    localdRq2.setExpandable(false);
    localdRq1.bb(localdRq2);
    localdRq2.brn();
    cwP localcwP2 = new cwP();
    localcwP2.aJ();
    localcwP2.setElementMap(localcpa);
    localcwP2.setAlign(ajb.dhZ);
    localcwP2.setSize(new Or(-2, -2));
    localdRq2.bb(localcwP2);
    localcwP2.brn();
    localcwP2.rV();
    dRq localdRq3 = localdRq2;
    Jg localJg1 = localdRq3.getAppearance();
    localJg1.setElementMap(localcpa);
    localdRq2.bb(localJg1);
    localJg1.brn();
    bmv localbmv1 = bmv.checkOut();
    localbmv1.setElementMap(localcpa);
    localbmv1.setInsets(new Insets(0, 65, 10, 65));
    localJg1.bb(localbmv1);
    localbmv1.brn();
    localbmv1.rV();
    cuR localcuR = new cuR();
    localcuR.aJ();
    localcuR.setElementMap(localcpa);
    localcuR.setInsets(new Insets(3, 6, 3, 6));
    localJg1.bb(localcuR);
    localcuR.brn();
    localcuR.rV();
    localJg1.rV();
    String str3 = "xpImage";
    czv localczv1 = new czv();
    localczv1.aJ();
    localczv1.setElementMap(localcpa);
    if ((localcpa != null) && (str3 != null))
      localcpa.a(str3, localczv1);
    localczv1.setStyle("xpIcon");
    localczv1.setNonBlocking(true);
    localczv1.setExpandable(false);
    localdRq2.bb(localczv1);
    localczv1.brn();
    localczv1.rV();
    dRq localdRq4 = dRq.checkOut();
    localdRq4.setElementMap(localcpa);
    localdRq4.setPrefSize(new Or(0, 20));
    localdRq2.bb(localdRq4);
    localdRq4.brn();
    dRq localdRq5 = localdRq4;
    Jg localJg2 = localdRq5.getAppearance();
    localJg2.setElementMap(localcpa);
    localdRq4.bb(localJg2);
    localJg2.brn();
    bmv localbmv2 = bmv.checkOut();
    localbmv2.setElementMap(localcpa);
    localbmv2.setInsets(new Insets(0, 2, 0, 0));
    localJg2.bb(localbmv2);
    localbmv2.brn();
    localbmv2.rV();
    localJg2.rV();
    czO localczO2 = new czO();
    localczO2.aJ();
    localczO2.setAdaptToContentSize(true);
    localdRq4.bb(localczO2);
    localczO2.brn();
    localczO2.rV();
    String str4 = "progressBar";
    alP localalP1 = new alP();
    localalP1.aJ();
    localalP1.setElementMap(localcpa);
    if ((localcpa != null) && (str4 != null))
      localcpa.a(str4, localalP1);
    localalP1.setStyle("XP2");
    localalP1.setNonBlocking(true);
    localdRq4.bb(localalP1);
    localalP1.brn();
    alP localalP2 = localalP1;
    Jg localJg3 = localalP2.getAppearance();
    localJg3.setElementMap(localcpa);
    localalP1.bb(localJg3);
    localJg3.brn();
    bmv localbmv3 = bmv.checkOut();
    localbmv3.setElementMap(localcpa);
    localbmv3.setInsets(new Insets(0, 1, 0, 1));
    localJg3.bb(localbmv3);
    localbmv3.brn();
    localbmv3.rV();
    localJg3.rV();
    cwP localcwP3 = new cwP();
    localcwP3.aJ();
    localcwP3.setElementMap(localcpa);
    localcwP3.setSize(new Or(100.0F, 14));
    localcwP3.setAlign(ajb.dhZ);
    localalP1.bb(localcwP3);
    localcwP3.brn();
    localcwP3.rV();
    localalP1.rV();
    String str5 = "progressBarContainer";
    dRq localdRq6 = dRq.checkOut();
    localdRq6.setElementMap(localcpa);
    if ((localcpa != null) && (str5 != null))
      localcpa.a(str5, localdRq6);
    localdRq6.setStyle("ProgressBar");
    localdRq6.setNonBlocking(true);
    localdRq4.bb(localdRq6);
    localdRq6.brn();
    cwP localcwP4 = new cwP();
    localcwP4.aJ();
    localcwP4.setElementMap(localcpa);
    localcwP4.setSize(new Or(100.0F, 14));
    localcwP4.setAlign(ajb.dhZ);
    localdRq6.bb(localcwP4);
    localcwP4.brn();
    localcwP4.rV();
    localdRq6.rV();
    localdRq4.rV();
    localdRq2.rV();
    String str6 = "leftDecorator";
    czv localczv2 = new czv();
    localczv2.aJ();
    localczv2.setElementMap(localcpa);
    if ((localcpa != null) && (str6 != null))
      localcpa.a(str6, localczv2);
    localczv2.setStyle("xpBarDecoratorLeft");
    localczv2.setNonBlocking(true);
    localdRq1.bb(localczv2);
    localczv2.brn();
    cwP localcwP5 = new cwP();
    localcwP5.aJ();
    localcwP5.setElementMap(localcpa);
    localcwP5.setAlign(ajb.dhY);
    localcwP5.setSize(new Or(-2, -2));
    localczv2.bb(localcwP5);
    localcwP5.brn();
    localcwP5.rV();
    localczv2.rV();
    String str7 = "rightDecorator";
    czv localczv3 = new czv();
    localczv3.aJ();
    localczv3.setElementMap(localcpa);
    if ((localcpa != null) && (str7 != null))
      localcpa.a(str7, localczv3);
    localczv3.setStyle("xpBarDecoratorRight");
    localczv3.setNonBlocking(true);
    localdRq1.bb(localczv3);
    localczv3.brn();
    cwP localcwP6 = new cwP();
    localcwP6.aJ();
    localcwP6.setElementMap(localcpa);
    localcwP6.setAlign(ajb.dia);
    localcwP6.setSize(new Or(-2, -2));
    localczv3.bb(localcwP6);
    localcwP6.brn();
    localcwP6.rV();
    localczv3.rV();
    String str8 = "levelText";
    cWk localcWk1 = new cWk();
    localcWk1.aJ();
    localcWk1.setElementMap(localcpa);
    if ((localcpa != null) && (str8 != null))
      localcpa.a(str8, localcWk1);
    localcWk1.setStyle("bigBordered");
    localcWk1.setExpandable(false);
    localcWk1.setNonBlocking(true);
    localdRq1.bb(localcWk1);
    localcWk1.brn();
    cwP localcwP7 = new cwP();
    localcwP7.aJ();
    localcwP7.setElementMap(localcpa);
    localcwP7.setSize(new Or(-2, -2));
    localcwP7.setAlign(ajb.dhZ);
    localcwP7.setYOffset(25);
    localcWk1.bb(localcwP7);
    localcwP7.brn();
    localcwP7.rV();
    cWk localcWk2 = localcWk1;
    Jg localJg4 = localcWk2.getAppearance();
    localJg4.setElementMap(localcpa);
    ((cwJ)localJg4).setTextColor(new bNa(1.0F, 1.0F, 1.0F, 1.0F));
    localcWk1.bb(localJg4);
    localJg4.brn();
    bmv localbmv4 = bmv.checkOut();
    localbmv4.setElementMap(localcpa);
    localbmv4.setInsets(new Insets(0, 0, 0, 0));
    localJg4.bb(localbmv4);
    localbmv4.brn();
    localbmv4.rV();
    localJg4.rV();
    localcWk1.rV();
    String str9 = "xpGainText";
    cWk localcWk3 = new cWk();
    localcWk3.aJ();
    localcWk3.setElementMap(localcpa);
    if ((localcpa != null) && (str9 != null))
      localcpa.a(str9, localcWk3);
    localcWk3.setStyle("SmallBoldBordered12");
    localcWk3.setMinWidth(1);
    localcWk3.setMaxWidth(200);
    localcWk3.setNonBlocking(true);
    localdRq1.bb(localcWk3);
    localcWk3.brn();
    cwP localcwP8 = new cwP();
    localcwP8.aJ();
    localcwP8.setElementMap(localcpa);
    localcwP8.setSize(new Or(-2, -2));
    localcwP8.setAlign(ajb.dhZ);
    localcwP8.setYOffset(-13);
    localcWk3.bb(localcwP8);
    localcwP8.brn();
    localcwP8.rV();
    localcWk3.rV();
    localdRq1.rV();
    return localdRq1;
  }
}