import java.awt.Insets;
import java.util.Stack;

public class bZU
  implements cEa
{
  private Stack X = new Stack();
  private cDA Y;

  public bdj a(cDA paramcDA, cpa paramcpa)
  {
    this.Y = paramcDA;
    this.X.push(paramcpa);
    cpa localcpa = (cpa)this.X.peek();
    String str1 = "popup";
    anG localanG = new anG();
    localanG.aJ();
    localanG.setElementMap(localcpa);
    if ((localcpa != null) && (str1 != null))
      localcpa.a(str1, localanG);
    localanG.setAlign(aFG.eci);
    localanG.setHotSpotPosition(aFG.ecm);
    localanG.setHideOnClick(false);
    localanG.brn();
    cwP localcwP1 = new cwP();
    localcwP1.aJ();
    localcwP1.setElementMap(localcpa);
    localcwP1.setSize(new Or(-2, -2));
    localanG.bb(localcwP1);
    localcwP1.brn();
    localcwP1.rV();
    String str2 = "container";
    dRq localdRq = dRq.checkOut();
    localdRq.setElementMap(localcpa);
    if ((localcpa != null) && (str2 != null))
      localcpa.a(str2, localdRq);
    localanG.bb(localdRq);
    localdRq.brn();
    czO localczO = new czO();
    localczO.aJ();
    localczO.setAdaptToContentSize(true);
    localdRq.bb(localczO);
    localczO.brn();
    localczO.rV();
    czv localczv = new czv();
    localczv.aJ();
    localczv.setElementMap(localcpa);
    localczv.setNonBlocking(true);
    localdRq.bb(localczv);
    localczv.brn();
    cwP localcwP2 = new cwP();
    localcwP2.aJ();
    localcwP2.setElementMap(localcpa);
    localcwP2.setSize(new Or(-2, -2));
    localcwP2.setAlign(ajb.dhZ);
    localczv.bb(localcwP2);
    localcwP2.brn();
    localcwP2.rV();
    aAR localaAR = aAR.checkOut();
    localaAR.setElementMap(localcpa);
    localczv.bb(localaAR);
    localaAR.brn();
    NK localNK1 = NK.checkOut();
    localNK1.setElementMap(localcpa);
    localNK1.setName("currentMapScrollDecoratorPath");
    localNK1.setAttribute("texture");
    localaAR.bb(localNK1);
    localNK1.brn();
    localNK1.rV();
    localaAR.rV();
    localczv.rV();
    cWk localcWk1 = new cWk();
    localcWk1.aJ();
    localcWk1.setElementMap(localcpa);
    localcWk1.setMultiline(false);
    localcWk1.setStyle("backgroundBold");
    localcWk1.setNonBlocking(true);
    localcWk1.setMinWidth(1);
    localcWk1.setMaxWidth(150);
    localcWk1.setExpandable(false);
    localcWk1.setEnableAutoZoomShrink(true);
    localdRq.bb(localcWk1);
    localcWk1.brn();
    cwP localcwP3 = new cwP();
    localcwP3.aJ();
    localcwP3.setElementMap(localcpa);
    localcwP3.setSize(new Or(-2, -2));
    localcwP3.setAlign(ajb.dhZ);
    localcWk1.bb(localcwP3);
    localcwP3.brn();
    localcwP3.rV();
    cWk localcWk2 = localcWk1;
    Jg localJg = localcWk2.getAppearance();
    localJg.setElementMap(localcpa);
    localcWk1.bb(localJg);
    localJg.brn();
    cAf localcAf = cAf.checkOut();
    localcAf.setElementMap(localcpa);
    localcAf.setColor(new bNa(1.0F, 1.0F, 1.0F, 1.0F));
    localJg.bb(localcAf);
    localcAf.brn();
    localcAf.rV();
    bmv localbmv = bmv.checkOut();
    localbmv.setElementMap(localcpa);
    localbmv.setInsets(new Insets(30, 15, 15, 15));
    localJg.bb(localbmv);
    localbmv.brn();
    localbmv.rV();
    localJg.rV();
    NK localNK2 = NK.checkOut();
    localNK2.setElementMap(localcpa);
    localNK2.setName("mapPopupDescription");
    localNK2.setAttribute("text");
    localcWk1.bb(localNK2);
    localNK2.brn();
    localNK2.rV();
    NK localNK3 = NK.checkOut();
    localNK3.setElementMap(localcpa);
    localNK3.setName("mapPopupIsEditing");
    localNK3.setAttribute("visible");
    localcWk1.bb(localNK3);
    localNK3.brn();
    anQ localanQ = new anQ();
    localanQ.aJ();
    localanQ.setElementMap(localcpa);
    localNK3.bb(localanQ);
    localanQ.brn();
    bqW localbqW = new bqW();
    localbqW.aJ();
    localbqW.setElementMap(localcpa);
    localanQ.bb(localbqW);
    localbqW.brn();
    localbqW.rV();
    localanQ.rV();
    localNK3.rV();
    localcWk1.rV();
    localdRq.rV();
    localanG.rV();
    return localanG;
  }
}