grammar macroscipting.Macro with org.eclipse.xtext.common.Terminals

generate macro "http://www.Macro"

	

Domain :
  elements += onLoadBloc
  elements += Bloc*
  elements += Class*
;

Class:
	 'class' name = ID ('extends' superType = Class)? '{'
	  
	 '}'
;

onLoadBloc:
	'onLoad' '{'
		'filePath' '=' filePath = STRING ';'
		'fileName' '=' fileName = STRING ';'
		'characterID' '=' characterID = INT ';'
		'scope' '=' scope = ScopeType ';'
		'compatMicro' '=' (compactMicro = 'true' | 'false') ';'
	'}'
;


Bloc:
	'bloc #' name = INT '{' 
	 directives += Directive*
	'}'
;


Directive://; returns Value:
	'dir' 
	(intDirective | strDirective | varDirective | conditionnalDirective) 
	';'
;

conditionnalDirective:
	ifDirective | waitDirective | lockDirective
;

strDirective:
	name = StringDirective //('returns' type = STRING) 
	':' 
	value = STRING //| ifDirective
	//directives += [strDirective]*
;

intDirective:
	name = IntegerDirective //('returns' type = INT) 
	':' 
	value = INT
	//directives += [intDirective]*
;

varDirective:
	name = 'VAR' 
	':'
	(left = ID) '=' (right = ID)
;

ifDirective:
	name = 'IF' //('returns' type = STRING) 
	'(' (left = ID) (operator = operator) (right = ID) ')' 
	'{'?
		directives += Directive*
	'}'?
;


waitDirective:
	name = 'WAIT' //('returns' type = STRING) 
	'(' time = INT')' 
;

lockDirective:
	name = 'LOCK' //('returns' type = STRING) 
	'(' variable = ID')' 
;

operator:
	'==' | '!='
;



IntegerDirective:
	'EMOTE' | 'DIRECTION' | 'MOVEMENT' | 'GOTO'
;
/*
EMOTE:'EMOTE';
DIRECTION:'DIRECTION';
MOVEMENT:'MOVEMENT';
GOTO:'GOTO';
 */
StringDirective:
	'CHAT' | 'EFFET' | 'VAR' | 'IF'
;

ScopeType:
	'TO_MAP' |
	'TO_TARGET' |
	'TO_SUBZONE' |
	'TO_ZONE' |
	'TO_SUPERZONE' |
	'TO_ALL'
;
/*
CHAT:'CHAT';
EFFET:'EFFET';
VAR:'VAR';
IF:'IF';
 */
//terminal DIRECTIVE_NAMES_INT : ('EMOTE'|'DIRECTION'|'MOVEMENT'|'GOTO');
//terminal DIRECTIVE_NAMES_STRING : ('CHAT'|'EFFET'|'VAR'|'IF');
//terminal DIRECTIVE_NAMES : ('CHAT'|'EFFET'|'VAR'|'IF'|'EMOTE'|'DIRECTION'|'MOVEMENT'|'GOTO');

//terminal ANY_STRING	: 
//	( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )*
//; 

