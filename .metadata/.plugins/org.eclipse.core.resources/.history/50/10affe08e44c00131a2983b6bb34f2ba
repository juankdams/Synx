package com.velocity.jwakfu.net.packets.out;

import com.velocity.jwakfu.io.OutPacket;
import com.velocity.jwakfu.model.GameCharacter;
import com.velocity.jwakfu.model.Player;
import com.velocity.jwakfu.net.packets.OutgoingPacket;

public class Packet2048SendCharacters implements OutgoingPacket {

	private Player player;
	
	public Packet2048SendCharacters(Player player) {
		this.player = player;
	}
	
	@Override
	public OutPacket encode() {
		OutPacket buffer = new OutPacket(2048);
		buffer.writeByte(player.getCharacters().size()); //amt of chars
		
		for (GameCharacter character : player.getCharacters()) {
			buffer.markShort(0);
			buffer.writeByte(4); //block type
			
			character.writeID(buffer);
			character.writeIdentity(buffer);
			character.writeName(buffer);
			character.writeBreed(buffer);
			character.writeAppearance(buffer);
			character.writeEquipment(buffer);
			character.writeCreationData(buffer);
			character.writeXP(buffer);
			character.writeNation(buffer);
			
			buffer.endMarkShort(0, -2);
		}
		return buffer;
	}

	

	public void writeID(GameCharacter character, OutPacket buffer) {
		buffer.writeLong(id);
	}
	
	public void writeIdentity(GameCharacter character, OutPacket buffer) {
		buffer.writeByte(idType);
		buffer.writeLong(owner);
	}
	
	public void writeName(GameCharacter character, OutPacket buffer) {
		buffer.writeBigString(name);
	}
	
	public void writeBreed(GameCharacter character, OutPacket buffer) {
		buffer.writeShort(character.getBreed().ordinal() + 1);
	}
	
	public void writeAppearance(GameCharacter character, OutPacket buffer) {
		buffer.writeByte(character.getAppearance().getSex()); //Sex
		buffer.writeByte(character.getAppearance().getSkinColorIndex()); //skinColorIndex
		buffer.writeByte(character.getAppearance().getHairColorIndex()); //hairColorIndex
		buffer.writeByte(character.getAppearance().getPupilColorIndex()); //pupilColorIndex
		buffer.writeByte(character.getAppearance().getSkinColorFactor()); //skinColorFactor
		buffer.writeByte(character.getAppearance().getHairColorFactor()); //hairColorFactor
		buffer.writeByte(character.getAppearance().getClothIndex()); //clothIndex
		buffer.writeByte(character.getAppearance().getFaceIndex()); //faceIndex
		buffer.writeShort(character.getAppearance().getTitle()); //title
	}
	
	public void writeEquipment(GameCharacter character, OutPacket buffer) {
		buffer.writeByte(1); //amt of equips
		
		buffer.writeByte(22); //slot
		buffer.writeInt(12237);
	}
	
	public void writeCreationData(GameCharacter character, OutPacket buffer) {
		buffer.writeByte(0); //no creation data
	}
	
	public void writeXP(GameCharacter character, OutPacket buffer) {
		buffer.writeLong(character.getXP()*23);
		buffer.writeShort(0); //free points
		
		int[] points = new int[] {40, 37, 39, 36, 41, 38};
		buffer.writeShort(6);
		for (int i=0; i<points.length; i++) {
			buffer.writeByte(points[i]);
			buffer.writeShort(0);
		}
		
		buffer.writeShort(6); //characteristicBonusPointCount
		for (int i=0; i<points.length; i++) {
			buffer.writeByte(points[i]);
			buffer.writeShort(0);
		}
		
		buffer.writeInt(0); //gauge
	}
	
	public void writeNation(GameCharacter character, OutPacket buffer) {
		buffer.writeInt(character.getNation().getId());
	}
	
	
}
