package Handlers;

import java.util.concurrent.Future;

import piou.scripts.ExecutableScript;
import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandler.Sharable;
import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.util.AttributeKey;
import Core.Syn;
import Interfaces.IWakfuClient;
import NewThreads.Task;
import Providers.WakfuClientProvider;
import Providers.WakfuClientProvider.*;
import Game.WakfuGameClient;
import Login.WakfuLoginClient;
import com.sun.script.fantom.FantomScriptEngine;
import GameClientStrategies.WakfuClientStrategy;

@Sharable
public class WakfuHandler extends NettyHandler {
	
	private static final FantomScriptEngine fse = new FantomScriptEngine();
	
	private AttributeKey<IWakfuClient> CLIENT_ATTR;
	private WakfuClientProvider clientProvider;
	
	public WakfuHandler(WakfuClientProvider provider) {
		clientProvider = provider;
		String attKey = clientProvider.getSessionAttributeKey();
		CLIENT_ATTR = new AttributeKey<IWakfuClient>(attKey);
	}

	@Override
	public void channelActive(ChannelHandlerContext ctx) throws Exception {
		Syn.wD("[w] A new channel is active: " + ctx.channel());
		Channel c = ctx.channel();
		c.attr(CLIENT_ATTR).setIfAbsent(clientProvider.createNew(c));
	}
	
	@Override
	public void channelInactive(ChannelHandlerContext ctx) throws Exception {
		IWakfuClient sess = ctx.channel().attr(CLIENT_ATTR).get();
		Syn.wD("[w] Channel inactive: " + sess);
		sess.kick();
		try {
			sess.terminate();
		} catch (Throwable e) { e.printStackTrace(); }
		//TODO: deregister from list
 	}
	
    @Override
    public void inboundBufferUpdated(ChannelHandlerContext ctx, ByteBuf msg) {
    	IWakfuClient sess = ctx.channel().attr(CLIENT_ATTR).get();
    	
    	/*ExecutableScript script = Syn.Services.wakfuClientStrategy.scripts.get("TestParser");
    	script.reEval();
    	Task<Object> task = Syn.Services.getThreadsManager().getTaskFactory().newScriptingTask(script, msg, sess);
    	Future<Object> f = Syn.Services.getThreadsManager().executeDirectTask(task);
    	sess.kick(); if(true) return;
    	//fse.fanExe = "C:/Users/Robyn/Desktop/fantom-1.0.65/bin/fan.exe";
    	//fse.run("C:/Users/Robyn/f4workspace/SynScripting/fan/Main.fan");
    	//fse.run("D:/Rob/PROJEKTS/EclipseTempWorkspace/Temp/fantomscript.fan");
    	
    	//fse.run("C:/Users/Robyn/f4workspace/Simple/build.fan");
    	//fse.run("C:/Users/Robyn/f4workspace/Simple/bin/fan/lib/fan/Simple::Main.main");
    	
    	//fse.run("C:/Users/Robyn/f4workspace/SynScripting/build.fan");
    	//fse.run("C:/Users/Robyn/f4workspace/SynScripting/bin/fan/lib/fan/SynScripting::Main.main");
    	*/
    	
		if (sess != null && msg.readableBytes() > 0) {
			
			if(clientProvider instanceof WakfuGameClientProvider)
				GameClientStrategies.WakfuClientStrategy.get().defaultPluginsManager
				.getParsingManager().parse((WakfuGameClient)sess, msg);
			if(clientProvider instanceof WakfuLoginClientProvider)
				GameClientStrategies.WakfuClientStrategy.get().defaultPluginsManager
				.getParsingManager().parse((WakfuLoginClient)sess, msg);
		}
    }


}
