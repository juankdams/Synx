package Plugins.Managers;

import io.netty.buffer.ByteBuf;

import java.util.HashMap;

import org.fusesource.jansi.Ansi;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import Core.Syn;
import Game.DofusGameClient;
import Interfaces.IClient;
import Interfaces.IWakfuClient;
import Plugins.Abstractions.AbstractPacketParser;
import Tool.TClient;

/**
 * @author Robyn
 * 
 * Takes a Client and a packet as inputs 
 * and parses the packet with the right parser for the right type of client.
 * Clients are : GameClients (GClient), ToolClients (TClient), LoginClients (LClient).
 */
public class ParsingManager {
	public Logger log = LoggerFactory.getLogger(ParsingManager.class);

	private final String[] packetsToIgnore = {"Ir742;556;2", "CWJ", "CWV"};
	private final String[] delimitersToIgnore = {"Ir", "@"};
	private HashMap<Integer, AbstractPacketParser<? extends IClient, ?>> parsers = new HashMap<Integer, AbstractPacketParser<? extends IClient, ?>>();
	
	
	public boolean parse(DofusGameClient c, String packet){
		Syn.w("DG [RECV] << "+packet, Ansi.Color.GREEN);
		//AbstractPacketParser<IClient> ip = parsers.get(packet.charAt(0));
		AbstractPacketParser<DofusGameClient, String> ip = cast(parsers.get(packet.charAt(0)));
		for(String s : packetsToIgnore){
			if(packet.equals(s)){
				log.info("Packet ignored by the ParsingManager :"+packet+"..");
				return true;
			}
		}
		for(String s : delimitersToIgnore){
			if(packet.startsWith(s)){
				log.info("Packet delimiter ignored by the ParsingManager :"+packet+"..");
				return true;
			}
		}
		if(ip == null){
			log.warn("DG Parser non-available for the character ("+packet.charAt(0)+")");
			return false;
		}
		return ip.parse(c, packet);
	}

	
	/**
	* Warning! Using this method is a sin against the gods of programming!
	*/
	@SuppressWarnings("unchecked")
	private static <T> T cast(Object o){
		return (T)o;
	}
	
}
