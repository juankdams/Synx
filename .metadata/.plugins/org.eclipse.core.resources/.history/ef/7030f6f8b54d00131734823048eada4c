package Plugins.Managers;

import io.netty.buffer.ByteBuf;

import java.util.HashMap;

import org.fusesource.jansi.Ansi;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import Core.Syn;
import Interfaces.IClient;
import Interfaces.IWakfuClient;
import Plugins.Abstractions.AbstractPacketParser;
import Tool.TClient;

/**
 * @author Robyn
 * 
 * Takes a Client and a packet as inputs 
 * and parses the packet with the right parser for the right type of client.
 * Clients are : GameClients (GClient), ToolClients (TClient), LoginClients (LClient).
 */
public class ParsingManager {
	public Logger log = LoggerFactory.getLogger(ParsingManager.class);

	private final Byte[] opcodesToIgnore = {};
	private HashMap<Integer, AbstractPacketParser<? extends IClient, ?>> parsers = new HashMap<Integer, AbstractPacketParser<? extends IClient, ?>>();
	
	@SuppressWarnings("unused")
	public boolean parse(IWakfuClient c, ByteBuf packet){
		return ip.parse(c, packet);
	}
	
	/**
	* Warning! Using this method is a sin against the gods of programming!
	*/
	@SuppressWarnings("unchecked")
	private static <T> T cast(Object o){
		return (T)o;
	}
	
}
