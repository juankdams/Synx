package GameClientStrategies;

import piou.scripts.ExecutableScript;
import piou.scripts.ScriptsService;
import Abstractions.AbstractWorld;
import Interfaces.IService;
import Plugins.Managers.PluginsManager;
import SQL.SConfig;

public abstract class GameClientStrategy implements IService {
	
	private GameClientStrategies strategy;
	
	public AbstractWorld globalWorld;
	public PluginsManager defaultPluginsManager;
	public ScriptsService<ExecutableScript> scripts;
	
	protected GameClientStrategy(){
		
	}
	
	public String getName(){
		return strategy.name();
	}
	
	void set(GameClientStrategies strategy) {
		this.strategy = strategy;
	}
	public GameClientStrategies get() {
		return strategy;
	}
	
	public void boot() throws Exception {
		bootPluginsManager();
		bootScripts();
	}
	public void reboot() throws Exception {
		scripts.reboot();
		defaultPluginsManager.reboot();
	}
	
	private void bootScripts()  throws Exception {
		this.scripts = new ScriptsService<ExecutableScript>(){
			private static final long serialVersionUID = 1L;
			@Override
			public void boot() throws Exception {
				SQL.SConfig.loadScripts(null, null);
			}
		};
		scripts.boot();
	}

	private void bootPluginsManager() throws Exception {
		this.defaultPluginsManager = new PluginsManager(null){
			@Override
			public void loadPlugins() {
				SConfig.loadPlugins(null, null);
				SConfig.loadMacros(null, null);
			}
		};
		defaultPluginsManager.boot();
	}
	

}
